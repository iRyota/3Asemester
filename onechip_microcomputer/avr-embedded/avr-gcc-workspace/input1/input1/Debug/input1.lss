
input1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  0000010a  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  0000013a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000092  00000000  00000000  0000015a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000053  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000ba  00000000  00000000  0000023f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  000002fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000013c  00000000  00000000  00000320  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000010  00000000  00000000  0000045c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 59 00 	jmp	0xb2	; 0xb2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

#include <avr/io.h>

int main(void)
{
	DDRB = _BV(PORTB2) | _BV(PORTB3) | _BV(PORTB4) | _BV(PORTB5);
  80:	8c e3       	ldi	r24, 0x3C	; 60
  82:	84 b9       	out	0x04, r24	; 4
	DDRD = _BV(PIND2) | _BV(PIND3) | _BV(PIND4) | _BV(PIND5);
  84:	8a b9       	out	0x0a, r24	; 10
	PORTB = _BV(PORTB2) | _BV(PORTB3) | _BV(PORTB4) | _BV(PORTB5);
  86:	85 b9       	out	0x05, r24	; 5
	
    while(1)
    {
		if(bit_is_set(PIND,PIND2)){
  88:	4a 9b       	sbis	0x09, 2	; 9
  8a:	02 c0       	rjmp	.+4      	; 0x90 <main+0x10>
			PORTB |= _BV(PORTB2);	
  8c:	2a 9a       	sbi	0x05, 2	; 5
  8e:	01 c0       	rjmp	.+2      	; 0x92 <main+0x12>
		} else {
			PORTB &= ~_BV(PORTB2);	
  90:	2a 98       	cbi	0x05, 2	; 5
		}
		if(bit_is_set(PIND,PIND3)){
  92:	4b 9b       	sbis	0x09, 3	; 9
  94:	02 c0       	rjmp	.+4      	; 0x9a <main+0x1a>
			PORTB |= _BV(PORTB3);
  96:	2b 9a       	sbi	0x05, 3	; 5
  98:	01 c0       	rjmp	.+2      	; 0x9c <main+0x1c>
			} else {
			PORTB &= ~_BV(PORTB3);
  9a:	2b 98       	cbi	0x05, 3	; 5
		}
		if(bit_is_set(PIND,PIND4)){
  9c:	4c 9b       	sbis	0x09, 4	; 9
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <main+0x24>
			PORTB |= _BV(PORTB4);
  a0:	2c 9a       	sbi	0x05, 4	; 5
  a2:	01 c0       	rjmp	.+2      	; 0xa6 <main+0x26>
			} else {
			PORTB &= ~_BV(PORTB4);
  a4:	2c 98       	cbi	0x05, 4	; 5
		}
		if(bit_is_set(PIND,PIND5)){
  a6:	4d 9b       	sbis	0x09, 5	; 9
  a8:	02 c0       	rjmp	.+4      	; 0xae <main+0x2e>
			PORTB |= _BV(PORTB5);
  aa:	2d 9a       	sbi	0x05, 5	; 5
  ac:	ed cf       	rjmp	.-38     	; 0x88 <main+0x8>
			} else {
			PORTB &= ~_BV(PORTB5);
  ae:	2d 98       	cbi	0x05, 5	; 5
  b0:	eb cf       	rjmp	.-42     	; 0x88 <main+0x8>

000000b2 <_exit>:
  b2:	f8 94       	cli

000000b4 <__stop_program>:
  b4:	ff cf       	rjmp	.-2      	; 0xb4 <__stop_program>
